<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2005 sp1 U (http://www.xmlspy.com) by Jean-Luc Corenthin and Steve Anderson (Autodesk) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="IGame">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="SceneInfo">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Info" maxOccurs="unbounded">
								<xs:complexType>
									<xs:attribute name="FileName" type="xs:string" use="optional"/>
									<xs:attribute name="StartFrame" type="xs:integer" use="optional"/>
									<xs:attribute name="EndFrame" type="xs:integer" use="optional"/>
									<xs:attribute name="FrameRate" type="xs:integer" use="optional"/>
									<xs:attribute name="TicksPerFrame" type="xs:integer" use="optional"/>
									<xs:attribute name="CoordinateSystem" type="CoordSys" use="optional"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="MaterialList" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="Material" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
						<xs:attribute name="Count" type="xs:integer" use="required"/>
					</xs:complexType>
				</xs:element>
				<xs:element ref="Node" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="Group" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="Version" type="xs:float" use="required"/>
			<xs:attribute name="Date" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="CoordSys">
		<xs:restriction base="xs:NMTOKEN">
			<xs:enumeration value="directx"/>
			<xs:enumeration value="opengl"/>
			<xs:enumeration value="3dsmax"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="NodeType">
		<xs:restriction base="xs:NMTOKEN">
			<xs:enumeration value="GeomObject"/>
			<xs:enumeration value="Helper"/>
			<xs:enumeration value="Light"/>
			<xs:enumeration value="Bone"/>
			<xs:enumeration value="Camera"/>
			<xs:enumeration value="SplineObject"/>
			<xs:enumeration value="IKChainObject"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="KeyType">
		<xs:restriction base="xs:NMTOKEN">
			<xs:enumeration value="FullSampled"/>
			<xs:enumeration value="Bezier"/>
			<xs:enumeration value="TCB"/>
			<xs:enumeration value="Linear"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="FloatList">
		<xs:list itemType="xs:float"/>
	</xs:simpleType>
	<xs:simpleType name="intList">
		<xs:list itemType="xs:positiveInteger"/>
	</xs:simpleType>
	<xs:simpleType name="Float2">
		<xs:restriction base="FloatList">
			<xs:minLength value="2"/>
			<xs:maxLength value="2"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Float3">
		<xs:restriction base="FloatList">
			<xs:minLength value="3"/>
			<xs:maxLength value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Int3">
		<xs:restriction base="intList">
			<xs:minLength value="3"/>
			<xs:maxLength value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Float4">
		<xs:restriction base="FloatList">
			<xs:minLength value="4"/>
			<xs:maxLength value="4"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SkinType">
		<xs:restriction base="xs:NMTOKENS">
			<xs:enumeration value="Blended"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Float6">	<!--This data type was used erroneously with scale values. -->
		<xs:restriction base="FloatList">
			<xs:minLength value="6"/>
			<xs:maxLength value="6"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Float7">
		<xs:restriction base="FloatList">
			<xs:minLength value="7"/>
			<xs:maxLength value="7"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="Key">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:double">
					<xs:attribute name="time" type="xs:integer" use="required"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="Prop">
		<xs:complexType>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="value" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="Material">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="NumSubMtls">
					<xs:simpleType>
						<xs:restriction base="xs:nonNegativeInteger"/>
					</xs:simpleType>
				</xs:element>
				<xs:element name="MultiMaterial" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="Material" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Properties" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="Prop" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="TextureMaps" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Texture">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="BitmapTexture">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Name" type="xs:Name"/>
													<xs:element ref="Prop" minOccurs="0" maxOccurs="unbounded"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="StdSlotType" type="xs:positiveInteger" use="required"/>
									<xs:attribute name="name" use="required">
										<xs:simpleType>
											<xs:restriction base="xs:Name"/>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="index" type="xs:positiveInteger" use="required"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="Count" type="xs:positiveInteger" use="required"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="index" type="xs:nonNegativeInteger" use="required"/>
			<xs:attribute name="Name" type="xs:string" use="required"/>
			<xs:attribute name="MaterialID" type="xs:nonNegativeInteger" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="Group">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Node"/>
				<xs:element ref="Group"/>
			</xs:sequence>
			<xs:attribute name="GroupName" type="xs:Name" use="required"/>
			<xs:attribute name="NodeID" type="xs:positiveInteger" use="required"/>
			<xs:attribute name="NumberInGroup" type="xs:positiveInteger" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="Node">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Node" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="NodeTM">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Translation" type="Float3"/>
							<xs:element name="Rotation" type="Float4"/>
							<xs:element name="Scale" type="Float6"/>  <!-- This is an exporter bug.!  This should have been a Float7.-->
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="MaterialIndex" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:nonNegativeInteger"/>
					</xs:simpleType>
				</xs:element>
				<xs:choice>
					<xs:element name="GeomData">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="Vertices" minOccurs="0" maxOccurs="1">
									<xs:complexType>
										<xs:sequence maxOccurs="unbounded">
											<xs:element name="vertex">
												<xs:complexType>
													<xs:simpleContent>
														<xs:extension base="Float3">
															<xs:attribute name="index" type="xs:positiveInteger" use="required"/>
														</xs:extension>
													</xs:simpleContent>
												</xs:complexType>
											</xs:element>
										</xs:sequence>
										<xs:attribute name="Count" type="xs:positiveInteger" use="required"/>
									</xs:complexType>
								</xs:element>
								<xs:element name="Normals" minOccurs="0" maxOccurs="1">
									<xs:complexType>
										<xs:sequence maxOccurs="unbounded">
											<xs:element name="normal">
												<xs:complexType>
													<xs:simpleContent>
														<xs:extension base="Float3">
															<xs:attribute name="index" type="xs:positiveInteger" use="required"/>
														</xs:extension>
													</xs:simpleContent>
												</xs:complexType>
											</xs:element>
										</xs:sequence>
										<xs:attribute name="Count" type="xs:positiveInteger" use="required"/>
									</xs:complexType>
								</xs:element>
								<xs:element name="TextureCoordinates" minOccurs="0">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="tVertex" type="Float2"/>
										</xs:sequence>
										<xs:attribute name="Count" type="xs:positiveInteger" use="required"/>
									</xs:complexType>
								</xs:element>
								<xs:element name="VertexColor" minOccurs="0"/>
								<xs:element name="Faces" minOccurs="0">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="Face">
												<xs:complexType>
													<xs:sequence>
														<xs:element name="vert" type="Int3"/>
														<xs:element name="smGrp" type="xs:positiveInteger"/>
														<xs:element name="MatID" type="xs:positiveInteger"/>
														<xs:element name="tvert" type="Int3"/>
														<xs:element name="VertexNormals">
															<xs:complexType>
																<xs:sequence>
																	<xs:element name="normal" type="Float3" maxOccurs="unbounded"/>
																</xs:sequence>
															</xs:complexType>
														</xs:element>
													</xs:sequence>
													<xs:attribute name="index" type="xs:positiveInteger" use="required"/>
												</xs:complexType>
											</xs:element>
										</xs:sequence>
										<xs:attribute name="Count" type="xs:positiveInteger" use="required"/>
									</xs:complexType>
								</xs:element>
								<xs:element name="MappingChannels" minOccurs="0">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="MapChannel" maxOccurs="unbounded">
												<xs:complexType>
													<xs:sequence>
														<xs:element name="MapVertexData">
															<xs:complexType>
																<xs:sequence>
																	<xs:element name="mapvertex" maxOccurs="unbounded">
																		<xs:complexType>
																			<xs:simpleContent>
																				<xs:extension base="Float3">
																					<xs:attribute name="index" type="xs:positiveInteger" use="required"/>
																				</xs:extension>
																			</xs:simpleContent>
																		</xs:complexType>
																	</xs:element>
																</xs:sequence>
																<xs:attribute name="Count" type="xs:positiveInteger" use="required"/>
															</xs:complexType>
														</xs:element>
														<xs:element name="MapFaceData">
															<xs:complexType>
																<xs:sequence>
																	<xs:element name="mapface" maxOccurs="unbounded">
																		<xs:complexType>
																			<xs:simpleContent>
																				<xs:extension base="Int3">
																					<xs:attribute name="index" type="xs:positiveInteger" use="required"/>
																				</xs:extension>
																			</xs:simpleContent>
																		</xs:complexType>
																	</xs:element>
																</xs:sequence>
																<xs:attribute name="Count" type="xs:positiveInteger" use="required"/>
															</xs:complexType>
														</xs:element>
													</xs:sequence>
													<xs:attribute name="ChannleNum" type="xs:positiveInteger" use="required"/>
												</xs:complexType>
											</xs:element>
										</xs:sequence>
										<xs:attribute name="Count" type="xs:positiveInteger" use="required"/>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
							<xs:attribute name="Include" type="xs:anyURI" use="optional"/>
						</xs:complexType>
					</xs:element>
					<xs:element name="SplineData"/>
					<xs:element name="IKChain"/>
				</xs:choice>
				<xs:element name="PRSData" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Position" minOccurs="0">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Sample" maxOccurs="unbounded">
											<xs:complexType>
												<xs:simpleContent>
													<xs:extension base="Float3">
														<xs:attribute name="frame" type="xs:integer" use="required"/>
													</xs:extension>
												</xs:simpleContent>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="KeyCount" type="xs:positiveInteger" use="required"/>
									<xs:attribute name="SampleRate" type="xs:positiveInteger" use="required"/>
									<xs:attribute name="Type" type="KeyType" use="required"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="EulerController" minOccurs="0">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="EulerX">
											<xs:complexType>
												<xs:sequence maxOccurs="unbounded">
													<xs:element ref="Key"/>
												</xs:sequence>
												<xs:attribute name="KeyCount" type="xs:positiveInteger" use="required"/>
												<xs:attribute name="Type" type="KeyType" use="required"/>
												<xs:attribute name="SampleRate" type="xs:positiveInteger" use="optional"/>
											</xs:complexType>
										</xs:element>
										<xs:element name="EulerY">
											<xs:complexType>
												<xs:sequence maxOccurs="unbounded">
													<xs:element ref="Key"/>
												</xs:sequence>
												<xs:attribute name="KeyCount" type="xs:positiveInteger" use="required"/>
												<xs:attribute name="Type" type="KeyType" use="required"/>
												<xs:attribute name="SampleRate" type="xs:positiveInteger" use="optional"/>
											</xs:complexType>
										</xs:element>
										<xs:element name="EulerZ">
											<xs:complexType>
												<xs:sequence maxOccurs="unbounded">
													<xs:element ref="Key"/>
												</xs:sequence>
												<xs:attribute name="KeyCount" type="xs:positiveInteger" use="required"/>
												<xs:attribute name="Type" type="KeyType" use="required"/>
												<xs:attribute name="SampleRate" type="xs:positiveInteger" use="optional"/>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Scale" minOccurs="0"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Modifiers" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Modifier" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Skin" maxOccurs="unbounded">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Bone" maxOccurs="unbounded">
														<xs:complexType>
															<xs:attribute name="BoneID" type="xs:positiveInteger" use="required"/>
															<xs:attribute name="Weight" type="xs:float" use="required"/>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
												<xs:attribute name="Type" type="SkinType" use="required"/>
												<xs:attribute name="VertexID" type="xs:positiveInteger" use="required"/>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="SkinType" type="xs:string" use="required"/>
									<xs:attribute name="IsSkin" type="xs:boolean" use="required"/>
									<xs:attribute name="modName" type="xs:string" use="required"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="Count" type="xs:positiveInteger" use="required"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="WireframeColor" type="Int3" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="Name" type="xs:Name" use="required"/>
			<xs:attribute name="NodeID" type="xs:positiveInteger" use="required"/>
			<xs:attribute name="NodeType" type="NodeType" use="required"/>
			<xs:attribute name="ParentNodeID" type="xs:positiveInteger" use="optional"/>
			<xs:attribute name="XRefObject" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
